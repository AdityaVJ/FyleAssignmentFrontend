[{"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/index.js":"1","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/App.js":"2","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/index.js":"3","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/config.js":"4","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/menuItems.js":"5","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/themes.js":"6","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/routes.js":"7","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/PageNotFound/PageNotFound.js":"8","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/LandingPage/LandingPage.js":"9","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/index.js":"10","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/SignIn/SignIn.js":"11","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/SignUp/SignUp.js":"12","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/PasswordReset/PasswordReset.js":"13","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/DialogDemo/DialogDemo.js":"14","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/Home/Home.js":"15","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/ToastDemo/ToastDemo.js":"16","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/MyAccount/MyAccount.js":"17","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/About/index.js":"18","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/de.js":"19","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/ru.js":"20","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/en.js":"21","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/FilterDemo/index.js":"22","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/ListPageDemo/index.js":"23","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/TabsDemo/index.js":"24"},{"size":140,"mtime":1611739133520,"results":"25","hashOfConfig":"26"},{"size":517,"mtime":1611767303036,"results":"27","hashOfConfig":"26"},{"size":39,"mtime":1611739133510,"results":"28","hashOfConfig":"26"},{"size":1158,"mtime":1611751517360,"results":"29","hashOfConfig":"26"},{"size":5929,"mtime":1611739133517,"results":"30","hashOfConfig":"26"},{"size":574,"mtime":1611739133519,"results":"31","hashOfConfig":"26"},{"size":1887,"mtime":1611739133518,"results":"32","hashOfConfig":"26"},{"size":1554,"mtime":1611739133544,"results":"33","hashOfConfig":"26"},{"size":527,"mtime":1611739133533,"results":"34","hashOfConfig":"26"},{"size":477,"mtime":1611739133514,"results":"35","hashOfConfig":"26"},{"size":4401,"mtime":1611739133547,"results":"36","hashOfConfig":"26"},{"size":5382,"mtime":1611739133548,"results":"37","hashOfConfig":"26"},{"size":3184,"mtime":1611739133545,"results":"38","hashOfConfig":"26"},{"size":1815,"mtime":1611739133524,"results":"39","hashOfConfig":"26"},{"size":4024,"mtime":1611941635577,"results":"40","hashOfConfig":"26"},{"size":812,"mtime":1611739133551,"results":"41","hashOfConfig":"26"},{"size":5429,"mtime":1611739133543,"results":"42","hashOfConfig":"26"},{"size":1114,"mtime":1611739133522,"results":"43","hashOfConfig":"26"},{"size":1702,"mtime":1611739133512,"results":"44","hashOfConfig":"26"},{"size":2430,"mtime":1611739133515,"results":"45","hashOfConfig":"26"},{"size":1626,"mtime":1611748921093,"results":"46","hashOfConfig":"26"},{"size":4981,"mtime":1611819952045,"results":"47","hashOfConfig":"26"},{"size":3466,"mtime":1611776023376,"results":"48","hashOfConfig":"26"},{"size":1131,"mtime":1611739133550,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"giv8cg",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/index.js",[],["102","103"],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/App.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/index.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/config.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/menuItems.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/themes.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/routes.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/PageNotFound/PageNotFound.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/LandingPage/LandingPage.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/index.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/SignIn/SignIn.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/SignUp/SignUp.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/PasswordReset/PasswordReset.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/DialogDemo/DialogDemo.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/Home/Home.js",["104","105","106","107","108","109","110"],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/ToastDemo/ToastDemo.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/MyAccount/MyAccount.js",["111"],"import Avatar from '@material-ui/core/Avatar'\r\nimport Camera from '@material-ui/icons/CameraAlt'\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Page from 'material-ui-shell/lib/containers/Page/Page'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport React, { useState } from 'react'\r\nimport Save from '@material-ui/icons/Save'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport { useAuth } from 'base-shell/lib/providers/Auth'\r\nimport { useIntl } from 'react-intl'\r\nimport { useQuestions } from 'material-ui-shell/lib/providers/Dialogs/Question'\r\nimport ImgageUploadDialog from 'material-ui-shell/lib/containers/ImageUploadDialog'\r\n\r\nconst MyAccount = () => {\r\n  const intl = useIntl()\r\n  const { openDialog } = useQuestions()\r\n\r\n  const { auth, updateAuth, setAuth } = useAuth()\r\n  const {\r\n    photoURL: currentPhoroURL = '',\r\n    displayName: currentDisplayName = '',\r\n    email = '',\r\n  } = auth || {}\r\n  const [displayName, setDisplayName] = useState(currentDisplayName)\r\n  const [photoURL, setPhotoURL] = useState(currentPhoroURL)\r\n  const [isImageDialogOpen, setImageDialogOpen] = useState(false)\r\n\r\n  const hasChange =\r\n    displayName !== currentDisplayName || photoURL !== currentPhoroURL\r\n\r\n  const handleImageChange = (image) => {\r\n    setPhotoURL(image)\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    updateAuth({ ...auth, displayName, photoURL })\r\n  }\r\n\r\n  const openDeleteDialog = () => {\r\n    openDialog({\r\n      title: intl.formatMessage({\r\n        id: 'delete_account_dialog_title',\r\n        defaultMessage: 'Delete Account?',\r\n      }),\r\n      message: intl.formatMessage({\r\n        id: 'delete_account_dialog_message',\r\n        defaultMessage:\r\n          'This Account and all related data to it will be deleted permanently. Do you want to proceed with the deletion?',\r\n      }),\r\n      action: intl.formatMessage({\r\n        id: 'delete_account_dialog_action',\r\n        defaultMessage: 'DELETE ACCOUNT',\r\n      }),\r\n      handleAction: handleDelete,\r\n    })\r\n  }\r\n\r\n  const handleDelete = async (handleClose) => {\r\n    setAuth({ isAuthenticated: false })\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage({\r\n        id: 'my_account',\r\n        defaultMessage: 'My Account',\r\n      })}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100%',\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          style={{\r\n            position: 'relative',\r\n            borderRadius: 18,\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Fab\r\n            size=\"medium\"\r\n            style={{ position: 'absolute', bottom: 40, right: -16 }}\r\n            onClick={openDeleteDialog}\r\n            color=\"secondary\"\r\n            aria-label=\"delete\"\r\n          >\r\n            <Delete />\r\n          </Fab>\r\n\r\n          <Fab\r\n            onClick={() => setImageDialogOpen(true)}\r\n            style={{\r\n              position: 'absolute',\r\n              zIndex: 99,\r\n              top: 50,\r\n              marginRight: -60,\r\n            }}\r\n            color=\"primary\"\r\n            aria-label=\"save\"\r\n            size=\"small\"\r\n          >\r\n            <Camera />\r\n          </Fab>\r\n\r\n          {photoURL && (\r\n            <Avatar\r\n              style={{ width: 120, height: 120, marginTop: -40 }}\r\n              alt=\"User Picture\"\r\n              src={photoURL}\r\n            />\r\n          )}\r\n          {!photoURL && (\r\n            <Avatar style={{ width: 120, height: 120, marginTop: -40 }}\r\n              alt=\"User Picture\">\r\n              {displayName ? (\r\n                displayName[0].toUpperCase()\r\n              ) : (\r\n                  <PersonIcon />\r\n                )}\r\n            </Avatar>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              flexDirection: 'column',\r\n              marginTop: 18,\r\n              marginBottom: 18,\r\n            }}\r\n          >\r\n            <InputBase\r\n              value={displayName}\r\n              onChange={(e) => setDisplayName(e.target.value)}\r\n              inputProps={{\r\n                'aria-label': 'naked',\r\n                style: {\r\n                  fontSize: 26,\r\n                  fontWeight: 'bold',\r\n                  textAlign: 'center',\r\n                },\r\n              }}\r\n            />\r\n            <Typography variant=\"h6\">{email}</Typography>\r\n          </div>\r\n\r\n          <Zoom in={hasChange}>\r\n            <Fab\r\n              onClick={handleSave}\r\n              style={{ marginBottom: -20 }}\r\n              color=\"primary\"\r\n              aria-label=\"save\"\r\n            >\r\n              <Save />\r\n            </Fab>\r\n          </Zoom>\r\n        </Paper>\r\n        {\r\n          <ImgageUploadDialog\r\n            isOpen={isImageDialogOpen}\r\n            isOpen={isImageDialogOpen}\r\n            handleClose={() => setImageDialogOpen(false)}\r\n            handleCropSubmit={handleImageChange}\r\n          />\r\n        }\r\n\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default MyAccount\r\n","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/About/index.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/de.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/ru.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/en.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/FilterDemo/index.js",["112"],"import AutoSizer from 'react-virtualized-auto-sizer'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport FilterDrawer from 'material-ui-shell/lib/components/FilterDrawer'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport React, { useEffect, useCallback } from 'react'\r\nimport SearchField from 'material-ui-shell/lib/components/SearchField'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport source from './data.json'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport { useFilter } from 'material-ui-shell/lib/providers/Filter'\r\nimport { useIntl } from 'react-intl'\r\nimport { Table } from 'react-virtualized'\r\n\r\nconst filterName = 'test_filter'\r\n\r\nconst CustomScrollbars = ({ onScroll, forwardedRef, style, children }) => {\r\n  const refSetter = useCallback((scrollbarsRef) => {\r\n    if (scrollbarsRef) {\r\n      forwardedRef(scrollbarsRef.view)\r\n    } else {\r\n      forwardedRef(null)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Scrollbars\r\n      ref={refSetter}\r\n      style={{ ...style, overflow: 'hidden' }}\r\n      onScroll={onScroll}\r\n    >\r\n      {children}\r\n    </Scrollbars>\r\n  )\r\n}\r\n\r\nconst CustomScrollbarsVirtualList = React.forwardRef((props, ref) => (\r\n  <CustomScrollbars {...props} forwardedRef={ref} />\r\n))\r\n\r\nconst FilterDemo = () => {\r\n  const intl = useIntl()\r\n  const { openFilter, getList, getFilter, setSearch } = useFilter()\r\n\r\n  const { queries = [], search = {} } = getFilter(filterName)\r\n  const { value: searchValue = '' } = search\r\n\r\n  const fields = [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'E-Mail',\r\n    },\r\n    {\r\n      name: 'amount',\r\n      label: 'Amount',\r\n      type: 'number',\r\n    },\r\n    {\r\n      name: 'isActive',\r\n      label: 'Active',\r\n      type: 'bool',\r\n    },\r\n    {\r\n      name: 'registered',\r\n      label: 'Registered',\r\n      type: 'date',\r\n    },\r\n    {\r\n      name: 'registrationTime',\r\n      label: 'Registration time',\r\n      type: 'time',\r\n    },\r\n  ]\r\n\r\n  const list = getList(filterName, source, fields)\r\n\r\n  const listRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    if (listRef.current) {\r\n      listRef.current.scrollToItem(1500, 'center')\r\n    }\r\n  }, [listRef])\r\n\r\n  const Row = ({ index, style }) => {\r\n    const { name, amount = '', registered, email } = list[index]\r\n\r\n    return (\r\n      <div key={`${name}_${index}`} style={style}>\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemText\r\n            primary={`${name} ${index}`}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {email}\r\n                </Typography>\r\n                <br />\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {`${amount} ${registered}`}\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage(\r\n        {\r\n          id: 'filter_demo',\r\n          defaultMessage: 'Filter demo with {count} rows',\r\n        },\r\n        { count: list.length }\r\n      )}\r\n      contentStyle={{ overflow: 'hidden' }}\r\n      appBarContent={\r\n        <Toolbar disableGutters>\r\n          <SearchField\r\n            initialValue={searchValue}\r\n            onChange={(v) => {\r\n              setSearch(filterName, v)\r\n            }}\r\n          />\r\n          <IconButton color=\"inherit\" onClick={() => openFilter(filterName)}>\r\n            <FilterList color={queries.length > 0 ? 'secondary' : undefined} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      }\r\n    >\r\n      <AutoSizer style={{ height: '100%', width: '100%' }}>\r\n        {({ height, width }) => {\r\n          return (\r\n            <List>\r\n              <FixedSizeList\r\n                className=\"List\"\r\n                ref={listRef}\r\n                height={height}\r\n                itemCount={list.length}\r\n                itemSize={91}\r\n                width={width}\r\n                outerElementType={CustomScrollbarsVirtualList}\r\n              >\r\n                {Row}\r\n              </FixedSizeList>\r\n            </List>\r\n          )\r\n        }}\r\n      </AutoSizer>\r\n      <FilterDrawer fields={fields} name={filterName} />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default FilterDemo","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/ListPageDemo/index.js",["113","114","115","116","117"],"import Page from 'material-ui-shell/lib/containers/Page'\r\nimport React, {useEffect, useState, useCallback, useMemo} from 'react'\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useIntl } from 'react-intl'\r\nimport config from '../../config/config'\r\nimport { ListPage } from 'material-ui-shell/lib/containers/Page'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport list from './data.json'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport axios from 'axios'\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Row = ({ index, style, data }) => {\r\n  const { name, id } = data\r\n\r\n  return (\r\n    <div key={`${name}`} style={style}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          primary={`${name}`}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\">\r\n                {id}\r\n              </Typography>\r\n              <br />\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\">\r\n                {`${id} ${id}`}\r\n              </Typography>\r\n              <br />\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\">\r\n                  {`User is active: ${id}`}\r\n                </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function ListPageDemo() {\r\n\r\nconst intl = useIntl()\r\nconst [bankData, setBankData] = useState([])\r\nconst [loading, setLoading] = useState(true);\r\n\r\nconst fetchApiData = useCallback(() => {\r\n\r\n  console.log('fetch api data called')\r\n  axios.get(config.server.banksUrl).then((response) => {\r\n    console.log('axios get called')\r\n    if (response.status === 200) {\r\n      let data = response.data;\r\n      setBankData(data);\r\n      setLoading(false);\r\n    }\r\n  }, (error) => {\r\n    console.log(error);\r\n  })\r\n});\r\n\r\nuseEffect(() => {\r\n  fetchApiData();\r\n  console.log('use effect called');\r\n}, []);\r\n  /*\r\n  return (\r\n    <Page pageTitle={intl.formatMessage({ id: 'bank_branches' })}>\r\n      <Scrollbar style={{ height: '100%', width: '100%', display: 'flex', flex: 1 }}>\r\n        {config.server.banksUrl}\r\n      </Scrollbar>\r\n    </Page>\r\n  )*/\r\n\r\nif (loading) {\r\n  return (\r\n    <Page pageTitle={intl.formatMessage({ id: 'bank_branches' })}>\r\n      <Grid\r\n      container\r\n      align=\"center\"\r\n      justify=\"center\"\r\n      direction=\"column\"\r\n      style={{ minHeight: \"100%\" }}>\r\n      <Grid item>\r\n        <CircularProgress />\r\n      </Grid>\r\n    </Grid>\r\n    </Page>\r\n  )\r\n}\r\nelse {\r\n  return (\r\n    <ListPage\r\n      name=\"list_demo\"\r\n      list={bankData}\r\n      // fields={fields}\r\n      onClick={() => alert('Hi, you have clicked an item!')}\r\n      Row={Row}\r\n      listProps={{ itemSize: 110 }}\r\n      getPageProps={(list) => {\r\n        return {\r\n          pageTitle: intl.formatMessage(\r\n            {\r\n              id: 'bank_branches',\r\n            },\r\n            { count: list.length }\r\n          ),\r\n        }\r\n      }}\r\n    />\r\n  )   \r\n}\r\n}\r\n//export default HomePage\r\n","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/TabsDemo/index.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":50,"nodeType":"124","messageId":"125","endLine":2,"endColumn":57},{"ruleId":"122","severity":1,"message":"126","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":16},{"ruleId":"122","severity":1,"message":"127","line":44,"column":8,"nodeType":"124","messageId":"125","endLine":44,"endColumn":22},{"ruleId":"122","severity":1,"message":"128","line":44,"column":24,"nodeType":"124","messageId":"125","endLine":44,"endColumn":41},{"ruleId":"129","severity":1,"message":"130","line":64,"column":22,"nodeType":"124","endLine":64,"endColumn":33},{"ruleId":"129","severity":1,"message":"131","line":94,"column":4,"nodeType":"132","endLine":94,"endColumn":6,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":124,"column":7,"nodeType":"136","endLine":124,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":173,"column":13,"nodeType":"136","endLine":173,"endColumn":39},{"ruleId":"122","severity":1,"message":"137","line":19,"column":10,"nodeType":"124","messageId":"125","endLine":19,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":2,"column":50,"nodeType":"124","messageId":"125","endLine":2,"endColumn":57},{"ruleId":"122","severity":1,"message":"138","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"122","severity":1,"message":"139","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":12},{"ruleId":"129","severity":1,"message":"130","line":61,"column":22,"nodeType":"124","endLine":61,"endColumn":33},{"ruleId":"129","severity":1,"message":"131","line":79,"column":4,"nodeType":"132","endLine":79,"endColumn":6,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'StarIcon' is defined but never used.","'serverSidePage' is assigned a value but never used.","'setServerSidePage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'fetchApiData'. Either include it or remove the dependency array.","ArrayExpression",["143"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Table' is defined but never used.","'Scrollbar' is defined but never used.","'list' is defined but never used.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},"Update the dependencies array to be: [fetchApiData]",{"range":"148","text":"149"},{"range":"150","text":"149"},[2990,2992],"[fetchApiData]",[2372,2374]]