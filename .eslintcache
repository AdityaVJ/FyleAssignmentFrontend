[{"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/index.js":"1","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/App.js":"2","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/index.js":"3","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/config.js":"4","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/menuItems.js":"5","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/themes.js":"6","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/routes.js":"7","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/PageNotFound/PageNotFound.js":"8","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/LandingPage/LandingPage.js":"9","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/index.js":"10","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/DialogDemo/DialogDemo.js":"11","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/Home/Home.js":"12","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/en.js":"13","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/FilterDemo/index.js":"14","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/ListPageDemo/index.js":"15","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/TabsDemo/index.js":"16"},{"size":140,"mtime":1611739133520,"results":"17","hashOfConfig":"18"},{"size":517,"mtime":1611767303036,"results":"19","hashOfConfig":"18"},{"size":39,"mtime":1611739133510,"results":"20","hashOfConfig":"18"},{"size":1153,"mtime":1611953806868,"results":"21","hashOfConfig":"18"},{"size":3706,"mtime":1611953341506,"results":"22","hashOfConfig":"18"},{"size":574,"mtime":1611739133519,"results":"23","hashOfConfig":"18"},{"size":782,"mtime":1611953697312,"results":"24","hashOfConfig":"18"},{"size":1554,"mtime":1611739133544,"results":"25","hashOfConfig":"18"},{"size":258,"mtime":1611952957013,"results":"26","hashOfConfig":"18"},{"size":191,"mtime":1611953863870,"results":"27","hashOfConfig":"18"},{"size":1815,"mtime":1611739133524,"results":"28","hashOfConfig":"18"},{"size":4444,"mtime":1611952152091,"results":"29","hashOfConfig":"18"},{"size":1194,"mtime":1611953899308,"results":"30","hashOfConfig":"18"},{"size":4981,"mtime":1611819952045,"results":"31","hashOfConfig":"18"},{"size":3466,"mtime":1611776023376,"results":"32","hashOfConfig":"18"},{"size":1131,"mtime":1611739133550,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"giv8cg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/index.js",[],["69","70"],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/App.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/index.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/config.js",["71"],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/menuItems.js",["72","73","74","75","76","77","78","79","80","81","82","83","84"],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/themes.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/routes.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/PageNotFound/PageNotFound.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/LandingPage/LandingPage.js",["85","86","87","88","89"],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/index.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/DialogDemo/DialogDemo.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/Home/Home.js",["90","91","92","93"],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/config/locales/en.js",[],"/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/FilterDemo/index.js",["94"],"import AutoSizer from 'react-virtualized-auto-sizer'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport FilterDrawer from 'material-ui-shell/lib/components/FilterDrawer'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport React, { useEffect, useCallback } from 'react'\r\nimport SearchField from 'material-ui-shell/lib/components/SearchField'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport source from './data.json'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport { useFilter } from 'material-ui-shell/lib/providers/Filter'\r\nimport { useIntl } from 'react-intl'\r\nimport { Table } from 'react-virtualized'\r\n\r\nconst filterName = 'test_filter'\r\n\r\nconst CustomScrollbars = ({ onScroll, forwardedRef, style, children }) => {\r\n  const refSetter = useCallback((scrollbarsRef) => {\r\n    if (scrollbarsRef) {\r\n      forwardedRef(scrollbarsRef.view)\r\n    } else {\r\n      forwardedRef(null)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Scrollbars\r\n      ref={refSetter}\r\n      style={{ ...style, overflow: 'hidden' }}\r\n      onScroll={onScroll}\r\n    >\r\n      {children}\r\n    </Scrollbars>\r\n  )\r\n}\r\n\r\nconst CustomScrollbarsVirtualList = React.forwardRef((props, ref) => (\r\n  <CustomScrollbars {...props} forwardedRef={ref} />\r\n))\r\n\r\nconst FilterDemo = () => {\r\n  const intl = useIntl()\r\n  const { openFilter, getList, getFilter, setSearch } = useFilter()\r\n\r\n  const { queries = [], search = {} } = getFilter(filterName)\r\n  const { value: searchValue = '' } = search\r\n\r\n  const fields = [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'E-Mail',\r\n    },\r\n    {\r\n      name: 'amount',\r\n      label: 'Amount',\r\n      type: 'number',\r\n    },\r\n    {\r\n      name: 'isActive',\r\n      label: 'Active',\r\n      type: 'bool',\r\n    },\r\n    {\r\n      name: 'registered',\r\n      label: 'Registered',\r\n      type: 'date',\r\n    },\r\n    {\r\n      name: 'registrationTime',\r\n      label: 'Registration time',\r\n      type: 'time',\r\n    },\r\n  ]\r\n\r\n  const list = getList(filterName, source, fields)\r\n\r\n  const listRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    if (listRef.current) {\r\n      listRef.current.scrollToItem(1500, 'center')\r\n    }\r\n  }, [listRef])\r\n\r\n  const Row = ({ index, style }) => {\r\n    const { name, amount = '', registered, email } = list[index]\r\n\r\n    return (\r\n      <div key={`${name}_${index}`} style={style}>\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemText\r\n            primary={`${name} ${index}`}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {email}\r\n                </Typography>\r\n                <br />\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {`${amount} ${registered}`}\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage(\r\n        {\r\n          id: 'filter_demo',\r\n          defaultMessage: 'Filter demo with {count} rows',\r\n        },\r\n        { count: list.length }\r\n      )}\r\n      contentStyle={{ overflow: 'hidden' }}\r\n      appBarContent={\r\n        <Toolbar disableGutters>\r\n          <SearchField\r\n            initialValue={searchValue}\r\n            onChange={(v) => {\r\n              setSearch(filterName, v)\r\n            }}\r\n          />\r\n          <IconButton color=\"inherit\" onClick={() => openFilter(filterName)}>\r\n            <FilterList color={queries.length > 0 ? 'secondary' : undefined} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      }\r\n    >\r\n      <AutoSizer style={{ height: '100%', width: '100%' }}>\r\n        {({ height, width }) => {\r\n          return (\r\n            <List>\r\n              <FixedSizeList\r\n                className=\"List\"\r\n                ref={listRef}\r\n                height={height}\r\n                itemCount={list.length}\r\n                itemSize={91}\r\n                width={width}\r\n                outerElementType={CustomScrollbarsVirtualList}\r\n              >\r\n                {Row}\r\n              </FixedSizeList>\r\n            </List>\r\n          )\r\n        }}\r\n      </AutoSizer>\r\n      <FilterDrawer fields={fields} name={filterName} />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default FilterDemo","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/ListPageDemo/index.js",["95","96","97","98","99"],"import Page from 'material-ui-shell/lib/containers/Page'\r\nimport React, {useEffect, useState, useCallback, useMemo} from 'react'\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useIntl } from 'react-intl'\r\nimport config from '../../config/config'\r\nimport { ListPage } from 'material-ui-shell/lib/containers/Page'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport list from './data.json'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport axios from 'axios'\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Row = ({ index, style, data }) => {\r\n  const { name, id } = data\r\n\r\n  return (\r\n    <div key={`${name}`} style={style}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          primary={`${name}`}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\">\r\n                {id}\r\n              </Typography>\r\n              <br />\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\">\r\n                {`${id} ${id}`}\r\n              </Typography>\r\n              <br />\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\">\r\n                  {`User is active: ${id}`}\r\n                </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function ListPageDemo() {\r\n\r\nconst intl = useIntl()\r\nconst [bankData, setBankData] = useState([])\r\nconst [loading, setLoading] = useState(true);\r\n\r\nconst fetchApiData = useCallback(() => {\r\n\r\n  console.log('fetch api data called')\r\n  axios.get(config.server.banksUrl).then((response) => {\r\n    console.log('axios get called')\r\n    if (response.status === 200) {\r\n      let data = response.data;\r\n      setBankData(data);\r\n      setLoading(false);\r\n    }\r\n  }, (error) => {\r\n    console.log(error);\r\n  })\r\n});\r\n\r\nuseEffect(() => {\r\n  fetchApiData();\r\n  console.log('use effect called');\r\n}, []);\r\n  /*\r\n  return (\r\n    <Page pageTitle={intl.formatMessage({ id: 'bank_branches' })}>\r\n      <Scrollbar style={{ height: '100%', width: '100%', display: 'flex', flex: 1 }}>\r\n        {config.server.banksUrl}\r\n      </Scrollbar>\r\n    </Page>\r\n  )*/\r\n\r\nif (loading) {\r\n  return (\r\n    <Page pageTitle={intl.formatMessage({ id: 'bank_branches' })}>\r\n      <Grid\r\n      container\r\n      align=\"center\"\r\n      justify=\"center\"\r\n      direction=\"column\"\r\n      style={{ minHeight: \"100%\" }}>\r\n      <Grid item>\r\n        <CircularProgress />\r\n      </Grid>\r\n    </Grid>\r\n    </Page>\r\n  )\r\n}\r\nelse {\r\n  return (\r\n    <ListPage\r\n      name=\"list_demo\"\r\n      list={bankData}\r\n      // fields={fields}\r\n      onClick={() => alert('Hi, you have clicked an item!')}\r\n      Row={Row}\r\n      listProps={{ itemSize: 110 }}\r\n      getPageProps={(list) => {\r\n        return {\r\n          pageTitle: intl.formatMessage(\r\n            {\r\n              id: 'bank_branches',\r\n            },\r\n            { count: list.length }\r\n          ),\r\n        }\r\n      }}\r\n    />\r\n  )   \r\n}\r\n}\r\n//export default HomePage\r\n","/Users/aditya/Documents/Development/Web/fyle-assignment-frontend/src/pages/TabsDemo/index.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":3,"column":17,"nodeType":"106","messageId":"107","endLine":3,"endColumn":31},{"ruleId":"104","severity":1,"message":"109","line":5,"column":3,"nodeType":"106","messageId":"107","endLine":5,"endColumn":19},{"ruleId":"104","severity":1,"message":"110","line":7,"column":16,"nodeType":"106","messageId":"107","endLine":7,"endColumn":29},{"ruleId":"104","severity":1,"message":"111","line":12,"column":3,"nodeType":"106","messageId":"107","endLine":12,"endColumn":15},{"ruleId":"104","severity":1,"message":"112","line":13,"column":15,"nodeType":"106","messageId":"107","endLine":13,"endColumn":27},{"ruleId":"104","severity":1,"message":"113","line":14,"column":11,"nodeType":"106","messageId":"107","endLine":14,"endColumn":19},{"ruleId":"104","severity":1,"message":"114","line":15,"column":15,"nodeType":"106","messageId":"107","endLine":15,"endColumn":27},{"ruleId":"104","severity":1,"message":"115","line":16,"column":3,"nodeType":"106","messageId":"107","endLine":16,"endColumn":17},{"ruleId":"104","severity":1,"message":"116","line":29,"column":5,"nodeType":"106","messageId":"107","endLine":29,"endColumn":17},{"ruleId":"104","severity":1,"message":"117","line":30,"column":5,"nodeType":"106","messageId":"107","endLine":30,"endColumn":11},{"ruleId":"104","severity":1,"message":"118","line":37,"column":5,"nodeType":"106","messageId":"107","endLine":37,"endColumn":19},{"ruleId":"104","severity":1,"message":"119","line":40,"column":11,"nodeType":"106","messageId":"107","endLine":40,"endColumn":15},{"ruleId":"104","severity":1,"message":"120","line":40,"column":17,"nodeType":"106","messageId":"107","endLine":40,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":12},{"ruleId":"104","severity":1,"message":"121","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"122","line":3,"column":33,"nodeType":"106","messageId":"107","endLine":3,"endColumn":39},{"ruleId":"104","severity":1,"message":"123","line":3,"column":41,"nodeType":"106","messageId":"107","endLine":3,"endColumn":47},{"ruleId":"104","severity":1,"message":"124","line":3,"column":49,"nodeType":"106","messageId":"107","endLine":3,"endColumn":54},{"ruleId":"104","severity":1,"message":"125","line":2,"column":50,"nodeType":"106","messageId":"107","endLine":2,"endColumn":57},{"ruleId":"126","severity":1,"message":"127","line":64,"column":25,"nodeType":"106","endLine":64,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":78,"column":22,"nodeType":"106","endLine":78,"endColumn":33},{"ruleId":"126","severity":1,"message":"128","line":114,"column":4,"nodeType":"129","endLine":114,"endColumn":6,"suggestions":"130"},{"ruleId":"104","severity":1,"message":"131","line":19,"column":10,"nodeType":"106","messageId":"107","endLine":19,"endColumn":15},{"ruleId":"104","severity":1,"message":"125","line":2,"column":50,"nodeType":"106","messageId":"107","endLine":2,"endColumn":57},{"ruleId":"104","severity":1,"message":"132","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":17},{"ruleId":"104","severity":1,"message":"133","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":12},{"ruleId":"126","severity":1,"message":"127","line":61,"column":22,"nodeType":"106","endLine":61,"endColumn":33},{"ruleId":"126","severity":1,"message":"128","line":79,"column":4,"nodeType":"129","endLine":79,"endColumn":6,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'AccountBoxIcon' is defined but never used.","'ChromeReaderMode' is defined but never used.","'ExitToAppIcon' is defined but never used.","'InfoOutlined' is defined but never used.","'LanguageIcon' is defined but never used.","'LockIcon' is defined but never used.","'MenuOpenIcon' is defined but never used.","'QuestionAnswer' is defined but never used.","'updateLocale' is assigned a value but never used.","'locale' is assigned a value but never used.","'isAuthMenuOpen' is assigned a value but never used.","'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'fetchApiData'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'Table' is defined but never used.","'Scrollbar' is defined but never used.","'list' is defined but never used.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"139","fix":"141"},"Update the dependencies array to be: [fetchApiData]",{"range":"142","text":"143"},{"range":"144","text":"143"},[3333,3335],"[fetchApiData]",[2372,2374]]